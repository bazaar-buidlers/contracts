{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6AC66635F013C212072ace533429a4C879F43fE6",
    "txHash": "0xee21172e21ffab9b9e5e89b01d22da66ff1106c81fb3c240ed66e1a111040b02"
  },
  "proxies": [
    {
      "address": "0x4B36Ab67E5Ac6d82a2AAd29071aB6B1b0E61592D",
      "txHash": "0x0d0eb63ec2f8a44ca6b00c036ae4008e2b3be4801397ebf6c95f33d325830d35",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9e7c9be020acf6f7f43e5dac871d269f7c18e0d722f935c0383a66a1ffdb8d42": {
      "address": "0x44B32d50EC3a5fbEC9C2ea6a2dE8a75071f68C7c",
      "txHash": "0x3e36bc16b8fda0790e4161040a5f9b98525562212ab28fff137927dd9775a7fe",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "escrow",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(Escrow)4618",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:26"
          },
          {
            "label": "feeNumerator",
            "offset": 20,
            "slot": "201",
            "type": "t_uint96",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:28"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:33"
          },
          {
            "label": "_listings",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_struct(Listing)4661_storage)",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:35"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Escrow)4618": {
            "label": "contract Escrow",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)4661_storage)": {
            "label": "mapping(uint256 => struct Listings.Listing)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Listing)4661_storage": {
            "label": "struct Listings.Listing",
            "members": [
              {
                "label": "config",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allow",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vendor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
