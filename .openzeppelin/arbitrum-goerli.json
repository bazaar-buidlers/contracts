{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xa8F7CF7a177EBfcd17C9a1E6b38297756cC4fd9A",
    "txHash": "0xe2fa3d01c84edcd44585029ccb8a9c4a28f5c40d931f76019da677b059ce6185"
  },
  "proxies": [
    {
      "address": "0xff2DfB52C63417CD1f5bAB91b2eFa8Cd50537A81",
      "txHash": "0x0816028165b94925fd1b77d8c39987da1099fd554badb31b5b7c6fce1361412c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "86d70a654dab4ce1bb15bf058add2da458e73d186f2eb4681a413641515f6016": {
      "address": "0x328119024D178C13468fb3Bb5CeCe3F65705172f",
      "txHash": "0x3a7e6ba74c992f790d3508f9de0b2ac0387bb689b628470b103e6363e2a4040e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "escrow",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(Escrow)4177",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:24"
          },
          {
            "label": "feeNumerator",
            "offset": 20,
            "slot": "201",
            "type": "t_uint96",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:31"
          },
          {
            "label": "_listings",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_struct(Listing)4215_storage)",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:33"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Bazaar",
            "src": "contracts/Bazaar.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Escrow)4177": {
            "label": "contract Escrow",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)4215_storage)": {
            "label": "mapping(uint256 => struct Listings.Listing)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Listing)4215_storage": {
            "label": "struct Listings.Listing",
            "members": [
              {
                "label": "vendor",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "config",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "allow",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
